name: Security Scanning (DAST + SCA)

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to scan'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

# Add permissions block
permissions:
  contents: read
  issues: write
  security-events: write

env:
  SCAN_TIMEOUT: 30m
  ZAP_ALERT_LEVEL: Medium

jobs:
  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    environment: ${{ github.event.inputs.environment || 'staging' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # SCA Scanning
      - name: Run SCA Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --json-file-output=snyk-results.json

      - name: Upload SCA Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sca-results
          path: snyk-results.json
          retention-days: 30

      # Build and Deploy to Test Environment
      - name: Install frontend dependencies and build project
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Install backend dependencies and start server
        run: |
          cd backend
          npm ci
          npm start &
          sleep 10

      # DAST Scanning
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          failure_on_high: true
          failure_on_medium: true
          failure_on_low: false
          failure_on_informational: false

      - name: Run OWASP ZAP Full Scan
        if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: 'http://localhost:3000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          failure_on_high: true
          failure_on_medium: true
          failure_on_low: false
          failure_on_informational: false

      - name: Upload DAST Results
        uses: actions/upload-artifact@v4
        with:
          name: dast-results
          path: |
            zap-report.html
            zap-report.json
            zap-report.md
          retention-days: 30

      # Security Report Generation
      - name: Generate Security Report
        if: always()
        run: |
          echo "## Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "### SCA Scan" >> $GITHUB_STEP_SUMMARY
          if [ -f snyk-results.json ]; then
            echo "SCA scan completed. Check artifacts for details." >> $GITHUB_STEP_SUMMARY
          else
            echo "SCA scan failed to generate report." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "### DAST Scan" >> $GITHUB_STEP_SUMMARY
          if [ -f zap-report.json ]; then
            echo "DAST scan completed. Check artifacts for details." >> $GITHUB_STEP_SUMMARY
          else
            echo "DAST scan failed to generate report." >> $GITHUB_STEP_SUMMARY
          fi

      # Notify on Critical Issues
      - name: Notify on Critical Issues
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const { repo, owner } = context.repo;
            const run_id = context.runId;
            
            await github.rest.issues.create({
              owner,
              repo,
              title: `ðŸš¨ Security Scan Failed - Run #${run_id}`,
              body: `Security scan failed in ${context.workflow} workflow. Please check the [workflow run](${context.serverUrl}/${owner}/${repo}/actions/runs/${run_id}) for details.`
            })

      - name: Create dummy file
        run: echo "test" > dummy.txt

      - name: Upload Dummy Artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-artifact
          path: dummy.txt
